{
  "title": "taxonomy.json",
  "definitions": {
    "Action": {
      "type": "object",
      "description": "Action to be performed on the data, e.g., masking",
      "properties": {
        "name": {
          "description": "Action name",
          "$ref": "#/definitions/ActionName"
        }
      },
      "additionalProperties": true,
      "required": [
        "name"
      ]
    },
    "ActionName": {
      "type": "string",
      "description": "Name of the action to be performed, or Deny if access to the data is forbidden Action names should be defined in additional taxonomy layers"
    },
    "AppInfo": {
      "type": "object",
      "description": "Application specific properties, e.g., intent for using the data, user role and workload characteristics",
      "additionalProperties": true
    },
    "AssetID": {
      "type": "string",
      "description": "Asset ID of the registered asset to be queried in the catalog, or a name of the new asset to be created and registered by Fybrik"
    },
    "AttributeType": {
      "type": "string",
      "description": "AttributeType enumeration: numeric, string, bool",
      "enum": [
        "bool",
        "numeric",
        "string"
      ]
    },
    "Capability": {
      "type": "string",
      "description": "Capability declared by the module, e.g., read, delete, copy, write, transform"
    },
    "Connection": {
      "type": "object",
      "description": "Details of connection types supported for accessing data stores. Not all are necessarily supported by fybrik storage allocation mechanism used to store temporary/persistent datasets.",
      "properties": {
        "db2": {
          "$ref": "#/definitions/db2"
        },
        "fybrik-arrow-flight": {
          "$ref": "#/definitions/fybrik-arrow-flight"
        },
        "google-sheets": {
          "$ref": "#/definitions/google-sheets"
        },
        "https": {
          "$ref": "#/definitions/https"
        },
        "kafka": {
          "$ref": "#/definitions/kafka"
        },
        "mysql": {
          "$ref": "#/definitions/mysql"
        },
        "name": {
          "description": "Name of the connection to the data source",
          "$ref": "#/definitions/ConnectionType"
        },
        "postgres": {
          "$ref": "#/definitions/postgres"
        },
        "s3": {
          "$ref": "#/definitions/s3"
        }
      },
      "additionalProperties": true,
      "required": [
        "name"
      ]
    },
    "ConnectionType": {
      "type": "string",
      "description": "Name of the connection type to the data source"
    },
    "DataFlow": {
      "type": "string",
      "description": "DataFlow indicates how the data is used by the workload, e.g., it is being read, copied, written or deleted",
      "enum": [
        "read",
        "write",
        "delete",
        "copy"
      ]
    },
    "DataFormat": {
      "type": "string",
      "description": "Format in which the data is being read/written by the workload"
    },
    "InfrastructureElement": {
      "type": "object",
      "description": "InfrastructureElement defines an infrastructure attribute - its measurement metric, value and relation to Fybrik resources",
      "properties": {
        "arguments": {
          "type": "array",
          "description": "A list of arguments defining a specific metric, e.g. regions for a bandwidth",
          "items": {
            "type": "string"
          }
        },
        "attribute": {
          "type": "string",
          "description": "Attribute name, defined in additional taxonomy layers"
        },
        "description": {
          "type": "string",
          "description": "Description of the infrastructure attribute"
        },
        "instance": {
          "type": "string",
          "description": "A reference to the resource instance, e.g. storage account name"
        },
        "metricName": {
          "type": "string",
          "description": "Name of the metric specified in the metrics section"
        },
        "object": {
          "description": "A resource defined by the attribute (\"fybrikstorageaccount\",\"fybrikmodule\",\"cluster\")",
          "$ref": "#/definitions/InstanceType"
        },
        "value": {
          "type": "string",
          "description": "Attribute value"
        }
      },
      "required": [
        "attribute",
        "value",
        "object"
      ]
    },
    "InfrastructureMetrics": {
      "type": "object",
      "description": "Measurement metric defining units and the value scale used for value normalization",
      "properties": {
        "name": {
          "type": "string"
        },
        "scale": {
          "description": "A scale of values (minimum and maximum) when applicable",
          "$ref": "#/definitions/RangeType"
        },
        "type": {
          "description": "Attribute type, e.g. numeric or string",
          "$ref": "#/definitions/AttributeType"
        },
        "units": {
          "description": "Measurement units",
          "$ref": "#/definitions/Units"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "InstanceType": {
      "type": "string",
      "description": "InstanceType enumeration: fybrikmodule, cluster, fybrikstorageaccount, inter-region",
      "enum": [
        "cluster",
        "fybrikmodule",
        "fybrikstorageaccount",
        "inter-region"
      ]
    },
    "Interface": {
      "type": "object",
      "description": "Connection type and data format used for data transactions",
      "properties": {
        "dataformat": {
          "description": "DataFormat defines the data format type",
          "$ref": "#/definitions/DataFormat"
        },
        "protocol": {
          "description": "Connection type, e.g., S3, Kafka, MySQL",
          "$ref": "#/definitions/ConnectionType"
        }
      },
      "required": [
        "protocol"
      ]
    },
    "PluginType": {
      "type": "string",
      "description": "Type of the plugin, not supported yet"
    },
    "PolicyManagerRequestContext": {
      "type": "object",
      "description": "Context in which a policy is evaluated, e.g., details of the data user such as role and intent",
      "additionalProperties": true
    },
    "ProcessingLocation": {
      "type": "string",
      "description": "location information"
    },
    "RangeType": {
      "type": "object",
      "description": "Range of numeric values",
      "properties": {
        "max": {
          "type": "integer"
        },
        "min": {
          "type": "integer"
        }
      }
    },
    "SecretRef": {
      "type": "object",
      "description": "Reference to k8s secret holding credentials for storage access",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace"
        }
      },
      "required": [
        "namespace",
        "name"
      ]
    },
    "StorageAccountProperties": {
      "type": "object",
      "description": "Properties of a shared storage account, e.g., endpoint",
      "additionalProperties": true
    },
    "Tags": {
      "type": "object",
      "description": "Additional metadata for the asset/field",
      "additionalProperties": true
    },
    "Units": {
      "type": "string",
      "description": "Measurement units"
    },
    "db2": {
      "type": "object",
      "description": "Connection information for accessing a table in a db2 database",
      "properties": {
        "database": {
          "type": "string",
          "description": "Database name"
        },
        "port": {
          "type": "integer",
          "description": "Database port"
        },
        "ssl": {
          "type": "boolean",
          "description": "SSL indicates whether the website is secured by an SSL certificate",
          "default": false
        },
        "table": {
          "type": "string",
          "description": "Table name"
        },
        "url": {
          "type": "string",
          "description": "URL of the database server"
        }
      },
      "required": [
        "database",
        "table",
        "url",
        "port"
      ]
    },
    "fybrik-arrow-flight": {
      "type": "object",
      "description": "Connection information for accessing data in-memory using API of the Fybrik Arrow Flight server",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Server host"
        },
        "port": {
          "type": "integer",
          "description": "Server port"
        },
        "scheme": {
          "type": "string",
          "description": "Scheme (grpc, http, https)"
        }
      },
      "required": [
        "hostname",
        "port",
        "scheme"
      ]
    },
    "google-sheets": {
      "type": "object",
      "description": "Connection information for accessing data in google-sheets",
      "properties": {
        "spreadsheet_id": {
          "type": "string",
          "description": "The link to the Google spreadsheet"
        }
      },
      "required": [
        "spreadsheet_id"
      ]
    },
    "https": {
      "type": "object",
      "description": "Connection information for accessing data via https",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL path to access the file."
        }
      },
      "required": [
        "url"
      ]
    },
    "kafka": {
      "type": "object",
      "description": "Connection information for accessing a kafka topic",
      "properties": {
        "bootstrap_servers": {
          "type": "string",
          "description": "A comma-separated list of host/port pairs to use for establishing the initial connection to the Kafka cluster"
        },
        "key_deserializer": {
          "type": "string",
          "description": "Deserializer to be used for the keys of the topic"
        },
        "sasl_mechanism": {
          "type": "string",
          "description": "SASL Mechanism to be used (e.g. PLAIN or SCRAM-SHA-512)",
          "default": "SCRAM-SHA-512"
        },
        "schema_registry": {
          "type": "string",
          "description": "Host/port to connect the schema registry server"
        },
        "security_protocol": {
          "type": "string",
          "description": "Kafka security protocol one of (PLAINTEXT, SASL_PLAINTEXT, SASL_SSL, SSL)",
          "default": "SASL_SSL"
        },
        "ssl_truststore": {
          "type": "string",
          "description": "A truststore or certificate encoded as base64. The format can be JKS or PKCS12."
        },
        "topic_name": {
          "type": "string",
          "description": "Name of the Kafka topic"
        },
        "value_deserializer": {
          "type": "string",
          "description": "Deserializer to be used for the values of the topic"
        }
      },
      "required": [
        "bootstrap_servers",
        "topic_name"
      ]
    },
    "mysql": {
      "type": "object",
      "description": "Connection information for accessing a table in a mysql database",
      "properties": {
        "database": {
          "type": "string",
          "description": "Database name"
        },
        "host": {
          "type": "string",
          "description": "Server host"
        },
        "port": {
          "type": "integer",
          "description": "Server port"
        },
        "ssl": {
          "type": "boolean",
          "description": "SSL indicates whether to encrypt data using SSL",
          "default": false
        },
        "table": {
          "type": "string",
          "description": "Table name"
        }
      },
      "required": [
        "database",
        "host",
        "port"
      ]
    },
    "postgres": {
      "type": "object",
      "description": "Connection information for accessing a table in a postgres database",
      "properties": {
        "database": {
          "type": "string",
          "description": "Database name"
        },
        "host": {
          "type": "string",
          "description": "Server host"
        },
        "port": {
          "type": "integer",
          "description": "Server port"
        },
        "ssl": {
          "type": "boolean",
          "description": "SSL indicates whether to encrypt data using SSL",
          "default": false
        },
        "table": {
          "type": "string",
          "description": "Table name"
        }
      },
      "required": [
        "database",
        "host",
        "port"
      ]
    },
    "s3": {
      "type": "object",
      "description": "Connection information for S3 compatible object store",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "S3 bucket name"
        },
        "endpoint": {
          "type": "string",
          "description": "S3 endpoint URL"
        },
        "object_key": {
          "type": "string",
          "description": "File name or a prefix (for a partitioned asset)"
        },
        "region": {
          "type": "string",
          "description": "S3 region, e.g., us-south"
        }
      },
      "required": [
        "bucket",
        "endpoint",
        "object_key"
      ]
    }
  }
}